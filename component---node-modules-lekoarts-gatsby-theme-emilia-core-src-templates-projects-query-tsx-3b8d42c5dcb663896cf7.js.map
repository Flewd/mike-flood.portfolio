{"version":3,"sources":["webpack:///./src/@lekoarts/gatsby-theme-emilia/texts/about-me.mdx","webpack:///./src/@lekoarts/gatsby-theme-emilia/components/header.tsx","webpack:///./src/@lekoarts/gatsby-theme-emilia/components/projects.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emilia-core/src/templates/projects-query.tsx","webpack:///./node_modules/@lekoarts/gatsby-theme-emilia/src/@lekoarts/gatsby-theme-emilia-core/components/projects.tsx"],"names":["layoutProps","_frontmatter","MDXContent","components","props","mdxType","style","parentName","isMDXComponent","Header","useEmiliaConfig","name","assetsPath","location","avatar","useStaticQuery","fadeUpProps","useSpring","config","slow","from","opacity","transform","to","fadeUpPropsDelay","delay","fadeProps","fadeLongProps","as","variant","sx","textAlign","my","zIndex","div","overflow","borderRadius","height","width","display","boxShadow","file","childImageSharp","fixed","fontSize","position","top","left","right","p","backgroundColor","data-placeholder","svg","color","mr","justifyContent","alignItems","data-testid","maxWidth","mt","mb","a","mx","Projects","projects","data","length","role","aria-label","href","gridTemplateColumns","gridColumnGap","map","project","index","val","allProject","nodes","parent","fields","colorThief","shadow","shadowArray","v","key","slug","item","overlay","inGrid","ProjectsComponent"],"mappings":"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","file":"component---node-modules-lekoarts-gatsby-theme-emilia-core-src-templates-projects-query-tsx-3b8d42c5dcb663896cf7.js","sourcesContent":["import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nexport const _frontmatter = {};\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = \"wrapper\";\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n    <h1>{`About Me`}</h1>\n    <p>{`Hello, Thank you for checking out my portfolio! I'm a Software Engineer who has a background in game design and specializes in working on game feel and gameplay systems. `}</p>\n    <div style={{\n      \"textAlign\": \"left\"\n    }}>\n      <ul>\n        <li parentName=\"ul\">{`9 years of experience programming and designing video games.`}</li>\n        <li parentName=\"ul\">{`Skilled in C#, Java, Swift, Objective C.`}</li>\n        <li parentName=\"ul\">{`Shipped multiple Unity games across Android, iOS, Steam, Switch, Xbox One.  `}</li>\n      </ul>\n    </div>\n    <h3>{`Current Roles:`}</h3>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://finji.co/\"\n      }}>{`Unity Programmer at Finji`}</a></p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/** @jsx jsx */\r\nimport { jsx, Heading, Flex } from \"theme-ui\"\r\nimport { animated, useSpring, config } from \"react-spring\"\r\nimport { useStaticQuery, graphql } from \"gatsby\"\r\nimport Img from \"gatsby-image\"\r\nimport useEmiliaConfig from \"../hooks/use-emilia-config\"\r\nimport HeaderBackground from \"./header-background\"\r\nimport Location from \"../assets/location\"\r\nimport SocialMediaList from \"./social-media-list\"\r\nimport { ChildImageSharpFixed } from \"../types\"\r\nimport AboutMeMDX from \"../texts/about-me\"\r\n\r\ntype AvatarStaticQuery = {\r\n  file: {\r\n    childImageSharp: ChildImageSharpFixed\r\n  }\r\n}\r\n\r\nconst Header = () => {\r\n  const { name, location, assetsPath } = useEmiliaConfig()\r\n  const avatar = useStaticQuery<AvatarStaticQuery>(graphql`\r\n    query {\r\n      file(name: { eq: \"avatar\" }) {\r\n        childImageSharp {\r\n          fixed(width: 140, height: 140, quality: 100) {\r\n            ...GatsbyImageSharpFixed_withWebp\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const fadeUpProps = useSpring({\r\n    config: config.slow,\r\n    from: { opacity: 0, transform: `translate3d(0, 30px, 0)` },\r\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\r\n  })\r\n  const fadeUpPropsDelay = useSpring({\r\n    config: config.slow,\r\n    delay: 250,\r\n    from: { opacity: 0, transform: `translate3d(0, 30px, 0)` },\r\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\r\n  })\r\n  const fadeProps = useSpring({ config: config.slow, from: { opacity: 0 }, to: { opacity: 1 } })\r\n  const fadeLongProps = useSpring({ config: config.slow, delay: 600, from: { opacity: 0 }, to: { opacity: 1 } })\r\n\r\n  return (\r\n    <Flex as=\"header\" variant=\"layout.projectHead\">\r\n      <HeaderBackground />\r\n      <div sx={{ textAlign: `center`, my: 5, zIndex: 10 }}>\r\n        <animated.div style={fadeProps}>\r\n          <div\r\n            sx={{\r\n              overflow: `hidden`,\r\n              borderRadius: `full`,\r\n              height: [`100px`, `140px`],\r\n              width: [`100px`, `140px`],\r\n              display: `inline-block`,\r\n              boxShadow: `lg`,\r\n              \"> div:not([data-placeholder='true'])\": {\r\n                height: [`100px !important`, `140px !important`],\r\n                width: [`100px !important`, `140px !important`],\r\n              },\r\n            }}\r\n          >\r\n            {avatar?.file?.childImageSharp?.fixed ? (\r\n              <Img fixed={avatar.file.childImageSharp.fixed} />\r\n            ) : (\r\n              <div\r\n                sx={{\r\n                  fontSize: 0,\r\n                  position: `absolute`,\r\n                  top: 0,\r\n                  left: 0,\r\n                  width: `100% !important`,\r\n                  right: 0,\r\n                  p: 3,\r\n                  backgroundColor: `red.2`,\r\n                }}\r\n                data-placeholder=\"true\"\r\n              >\r\n                Place an image with the name \"avatar\" inside the directory \"{assetsPath}\"\r\n              </div>\r\n            )}\r\n          </div>\r\n        </animated.div>\r\n        <animated.div style={fadeUpProps}>\r\n          <Heading as=\"h1\" variant=\"styles.h1\">\r\n            {name}\r\n          </Heading>\r\n        </animated.div>\r\n        <animated.div style={fadeUpPropsDelay}>\r\n          <Flex\r\n            sx={{\r\n              svg: {\r\n                width: `20px`,\r\n                height: `20px`,\r\n                \".primary\": { color: `iconPrimary` },\r\n                \".secondary\": { color: `iconSecondary` },\r\n                mr: 2,\r\n              },\r\n              justifyContent: `center`,\r\n              alignItems: `center`,\r\n              color: `text`,\r\n            }}\r\n          >\r\n            {/* <Location /> {location} */}\r\n          </Flex>\r\n        </animated.div>\r\n        <div data-testid=\"social-header\" style={{maxWidth:'55em'}} sx={{ mt: 4, mb: 6, a: { mx: 2 } }}>\r\n          <animated.div style={fadeLongProps}>\r\n            <SocialMediaList />\r\n          </animated.div>\r\n          <AboutMeMDX />\r\n        </div>\r\n      </div>\r\n    </Flex>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","/** @jsx jsx */\r\n/* eslint no-shadow: 0 */\r\nimport { jsx, Container, Styled, Box } from \"theme-ui\"\r\nimport { useSpring, animated, config } from \"react-spring\"\r\nimport { graphql, useStaticQuery } from \"gatsby\"\r\nimport { ChildImageSharpFluid } from \"../types\"\r\nimport Layout from \"./layout\"\r\nimport Header from \"./header\"\r\nimport Card from \"./card\"\r\n\r\ntype Props = {\r\n  projects: {\r\n    slug: string\r\n    title: string\r\n    cover: {\r\n      childImageSharp: ChildImageSharpFluid\r\n    }\r\n  }[]\r\n}\r\n\r\ntype ProjecsStaticQuery = {\r\n  allProject: {\r\n    nodes: {\r\n      parent: {\r\n        fields: {\r\n          colorThief: string[]\r\n        }\r\n      }\r\n    }[]\r\n  }\r\n}\r\n\r\nconst Projects = ({ projects }: Props) => {\r\n  const data = useStaticQuery<ProjecsStaticQuery>(graphql`\r\n    query {\r\n      allProject(sort: { fields: date, order: DESC }) {\r\n        nodes {\r\n          ... on MdxProject {\r\n            parent {\r\n              ... on Mdx {\r\n                fields {\r\n                  colorThief\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `)\r\n\r\n  const fadeUpProps = useSpring({\r\n    config: config.slow,\r\n    delay: 600,\r\n    from: { opacity: 0, transform: `translate3d(0, 30px, 0)` },\r\n    to: { opacity: 1, transform: `translate3d(0, 0, 0)` },\r\n  })\r\n\r\n  if (projects.length === 0) {\r\n    return (\r\n      <Layout>\r\n        <Header />\r\n        <Container>\r\n          <Styled.p>\r\n            Hi!{` `}\r\n            <span role=\"img\" aria-label=\"Wave emoji\">\r\n              👋\r\n            </span>\r\n            {` `}\r\n            <br />\r\n            Thanks for using <b>@lekoarts/gatsby-theme-emilia</b>. You currently don't have any content in your{` `}\r\n            <i>projects</i> folder - that's why this page displays a placeholder text. Head over to the{` `}\r\n            <Styled.a href=\"https://github.com/LekoArts/gatsby-themes/tree/master/themes/gatsby-theme-emilia\">\r\n              README\r\n            </Styled.a>\r\n            {` `}\r\n            to learn how to setup them.\r\n          </Styled.p>\r\n          <Styled.p>\r\n            <b>TL;DR:</b> <br />\r\n            The starter automatically created the folder <code>content/projects</code>. Go into this folder, create a\r\n            new folder called <code>example</code> and create an <code>index.mdx</code> file there and place an image.\r\n            Edit the frontmatter like described in the{` `}\r\n            <Styled.a href=\"https://github.com/LekoArts/gatsby-themes/tree/master/themes/gatsby-theme-emilia\">\r\n              README\r\n            </Styled.a>\r\n            .\r\n          </Styled.p>\r\n        </Container>\r\n      </Layout>\r\n    )\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Header />\r\n      <Box as=\"main\" variant=\"layout.main\">\r\n        <animated.div style={fadeUpProps}>\r\n          <Container\r\n            sx={{\r\n              mt: `-8rem`,\r\n              display: `grid`,\r\n              gridTemplateColumns: [`1fr`, `repeat(auto-fill, minmax(350px, 1fr))`],\r\n              gridColumnGap: 4,\r\n            }}\r\n          >\r\n            \r\n            {\r\n            projects.map((project, index) => {\r\n              const val = data.allProject.nodes[index].parent.fields.colorThief\r\n              const shadow = `${val[0]}, ${val[1]}, ${val[2]}`\r\n\r\n              const px = [`64px`, `32px`, `16px`, `8px`, `4px`]\r\n              const shadowArray = px.map((v) => `rgba(${shadow}, 0.15) 0px ${v} ${v} 0px`)\r\n\r\n              return <Card key={project.slug} item={project} overlay={shadow} shadow={shadowArray} inGrid />\r\n            })}\r\n          </Container>\r\n        </animated.div>\r\n      </Box>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Projects\r\n","import { graphql } from \"gatsby\"\nimport ProjectsComponent from \"../components/projects\"\n\nexport default ProjectsComponent\n\nexport const query = graphql`\n  query {\n    allProject(sort: { fields: date, order: DESC }) {\n      nodes {\n        slug\n        title\n        cover {\n          childImageSharp {\n            fluid(maxWidth: 770, quality: 95) {\n              ...GatsbyImageSharpFluid_withWebp\n              presentationHeight\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport Projects from \"../../../components/projects\"\n\ntype Props = {\n  data: {\n    allProject: any\n    [key: string]: string\n  }\n  [key: string]: any\n}\n\nexport default function EmiliaCoreProjects({ ...props }: Props) {\n  const {\n    data: { allProject },\n  } = props\n\n  return <Projects projects={allProject.nodes} {...props} />\n}\n"],"sourceRoot":""}